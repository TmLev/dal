version: "3"

services:
  postgres:
    image: postgres:13-alpine
    restart: always
    env_file:
      - .env

  ofelia:
    image: mcuadros/ofelia:latest
    command: daemon --config=/ofelia/config.ini
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./ofelia:/ofelia:ro
    # depends_on:
    #   - back-end

  watchdoc:
    build:
      context: .
      dockerfile: watchdoc/Dockerfile
    env_file:
      - .env
      - watchdoc/.env
    ports:
      - $WATCHDOC_PORT:$WATCHDOC_PORT
      # - $WATCHDOC_AUTH_PORT:$WATCHDOC_AUTH_PORT
    volumes:
      - ./watchdoc:/watchdoc

  back-end:
    container_name: back-end
    build:
      context: .
      dockerfile: back-end/docker/image/Dockerfile
    env_file:
      - .env
      - back-end/.env
    depends_on:
      - postgres
    ports:
      - $BACK_END_PORT:$BACK_END_PORT
    command: >
      sh -c "/tools/wait-for-it.sh $POSTGRES_HOST:$POSTGRES_PORT -t 0 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:$BACK_END_PORT"
    restart: always
    volumes:
      - ./back-end:/back-end

  front-end:
    build:
      context: .
      dockerfile: front-end/Dockerfile
      args:
        - VUE_APP_BACK_END_HOST=$BACK_END_HOST
        - VUE_APP_BACK_END_PORT=$BACK_END_PORT
    env_file:
      - .env
    depends_on:
      - back-end
    ports:
      - $FRONT_END_PORT:80
    command: >
      sh -c "tools/wait-for-it.sh back-end:$BACK_END_PORT -t 0 &&
             nginx -g \"daemon off;\""
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  tgbot:
    container_name: tgbot
    build:
      context: .
      dockerfile: tgbot/Dockerfile
    env_file:
      - .env
      - tgbot/.env
    depends_on:
      - back-end
    command: python src/bot.py
    restart: always
    volumes:
      - ./tgbot:/tgbot
